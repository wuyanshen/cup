spring:
  # quartz定时任务框架配置
  quartz:
    job-store-type: jdbc
    # 设置覆盖已存在的任务
    overwrite-existing-jobs: true
    # 项目启动完成后，等待10秒后开始执行调度器初始化
    startup-delay: 10s
    # 设置调度器的名称
    scheduler-name: adminQuartzScheduler
    # 设置调度器自动运行
    auto-startup: true
    # 项目关闭的时候关闭定时任务线程
    wait-for-jobs-to-complete-on-shutdown: true
    properties:
      org:
        quartz:
          scheduler:
            instanceName: clusteredScheduler
            instanceId: AUTO
          jobStore:
            # 超过60s的就不立即执行
            # 解释：
            # 如果设置 misfireThreshold: 60000
            # 我设置15s的情况下，如果我在10:00:00执行了一个任务，下次就是15s，但是如果服务器挂掉，我在10:00:50重新启动服务器，由于任务间隔是15s，所以从00-50s中间会有三个任务超时没有执行（本来应该分别是在15s，30s，45s执行），而超时的时间均小于1min，所以服务器启动以后会立即开启三个quartz线程来执行超时的任务。
            # 如果设置定时任务1min执行一次，无论如何超时，都是超过1min的，所以不会执行超时任务。
            misfireThreshold: 1000
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
            dataSource: quartzDataSource
            tablePrefix: QRTZ_
            isClustered: true
            clusterCheckinInterval: 10000
            useProperties: false
          threadPool:
            class: org.quartz.simpl.SimpleThreadPool
            threadCount: 10
            threadPriority: 5
            threadsInheritContextClassLoaderOfInitializingThread: true

